{"version":3,"file":"static/js/392.8bcccb72.chunk.js","mappings":"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","sources":["@core/hooks/useTranslation.ts","@core/components/atoms/Image/Image.component.tsx","@core/components/atoms/Image/index.ts","@core/components/organisms/CatCard/CatCard.component.tsx","@core/components/atoms/Skeleton/Skeleton.component.tsx","@core/components/atoms/Skeleton/index.ts","@core/components/organisms/CatCard/CatCard.skeleton.tsx","@core/components/organisms/CatCard/index.ts","screens/CatsList/partials/components/List/List.loading.tsx","screens/CatsList/partials/components/List/List.component.tsx","screens/CatsList/partials/components/List/index.ts","@core/components/atoms/Button/Button.component.tsx","@core/components/atoms/Button/index.ts","screens/CatsList/partials/components/LoadMore/LoadMore.component.tsx","screens/CatsList/partials/components/LoadMore/index.ts","@core/hooks/useAppSelector.ts","screens/CatsList/CatsList.component.tsx","screens/CatsList/index.ts","@core/hooks/useAppDispatch.ts"],"sourcesContent":["import { t as translate } from 'react-tiny-i18n';\n\ninterface IUseTranslationReturnProps {\n  t: (key: string, variables?: Record<string, string>) => string;\n}\nconst useTranslation = (): IUseTranslationReturnProps => {\n  const t = (key: string, variables?: Record<string, string>) =>\n    translate(key, variables);\n\n  return { t };\n};\n\nexport default useTranslation;\n","import React, { useState } from 'react';\nimport { cnj, createUseStyles } from '@core/utils/makeStyle';\n\nconst fallback = () => 'not found';\n\ninterface ImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  className?: string;\n}\n\nconst Image = React.forwardRef<HTMLImageElement, ImageProps>(\n  ({ src, className, ...rest }, ref) => {\n    const classes = useStyles();\n\n    const [isError, setError] = useState(false);\n\n    const handleError = () => {\n      setError(true);\n    };\n\n    return (\n      <img\n        ref={ref}\n        {...rest}\n        className={cnj(classes.imageComponentRoot, className)}\n        src={isError ? fallback() : src}\n        onError={handleError}\n        loading=\"lazy\"\n        alt=\"â€¦\"\n      />\n    );\n  }\n);\nconst useStyles = createUseStyles({\n  imageComponentRoot: {\n    verticalAlign: 'middle',\n    maxWidth: '100%',\n  },\n});\nexport default Image;\n","import Image from './Image.component';\n\nexport default Image;\n","import React from 'react';\nimport Image from '../../atoms/Image';\nimport { ICat } from '../../../types';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { ITheme } from '../../../types/theme';\nimport Flex from '../../atoms/Flex';\n\ninterface IMovieCardProps {\n  data: ICat;\n}\n\nconst CatCard: React.FC<IMovieCardProps> = ({ data }) => {\n  const classes = useStyles();\n\n  return (\n    <Flex className={classes.cardComponentRoot}>\n      <Image className={classes.cardImage} src={data.url} />\n    </Flex>\n  );\n};\nconst useStyles = createUseStyles(({ media, sizes, radii }: ITheme) => ({\n  cardComponentRoot: {\n    display: 'flex',\n    flexGrow: 0,\n    flexBasis: '50%',\n    flexShrink: 0,\n    borderRadius: radii.sm,\n    overflow: 'hidden',\n    padding: sizes.xs,\n    height: 150,\n  },\n  cardImage: {\n    height: 'auto',\n    minWidth: '100%',\n    borderRadius: radii.sm,\n    overflow: 'hidden',\n    objectFit: 'cover',\n  },\n  [media.tablet]: {\n    cardComponentRoot: {\n      flexBasis: '33.33%',\n      height: 300,\n      padding: sizes.sm,\n    },\n  },\n  [media.desktop]: {\n    cardComponentRoot: {\n      flexBasis: '25%',\n    },\n  },\n}));\nexport default CatCard;\n","import React from 'react';\nimport { createUseStyles, cnj } from '@core/utils/makeStyle';\nimport Flex from '../Flex';\nimport { ITheme } from '../../../types/theme';\n\nexport interface FlexComponentProps {\n  className?: string;\n  variant: 'square';\n}\n\nconst SkeletonComponent: React.FC<FlexComponentProps> = ({ className }) => {\n  const classes = useStyles();\n\n  return <Flex className={cnj(classes.skeletonComponentRoot, className)} />;\n};\n\nconst useStyles = createUseStyles(({ colors }: ITheme) => ({\n  '@keyframes loader': {\n    '0%': { opacity: 0 },\n    '100%': { opacity: '100%' },\n  },\n  skeletonComponentRoot: {\n    minWidth: '100%',\n    minHeight: '100%',\n    backgroundColor: colors.background,\n    position: 'relative',\n    overflow: 'hidden',\n\n    '&::after': {\n      animationName: '$loader',\n      animationDuration: '1000ms',\n      animationDirection: 'alternate',\n      animationIterationCount: 'infinite',\n      animationTimingFunction: 'ease-in-out',\n      backgroundColor: colors.darkBackground,\n      borderRadius: 'inherit',\n      bottom: 0,\n      content: '\"\"',\n      left: 0,\n      position: 'absolute',\n      right: 0,\n      top: 0,\n    },\n  },\n}));\n\nexport default SkeletonComponent;\n","import Skeleton from './Skeleton.component';\n\nexport default Skeleton;\n","import React from 'react';\nimport Skeleton from '../../atoms/Skeleton';\nimport Flex from '../../atoms/Flex';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { ITheme } from '@core/types/theme';\n\nconst CatCardSkeleton = () => {\n  const classes = useStyles();\n  return (\n    <Flex className={classes.catCardSkeletonRoot}>\n      <Skeleton className={classes.skeleton} variant=\"square\" />\n    </Flex>\n  );\n};\n\nconst useStyles = createUseStyles(({ media, radii, sizes }: ITheme) => ({\n  catCardSkeletonRoot: {\n    display: 'flex',\n    flexGrow: 0,\n    flexShrink: 0,\n    flexBasis: '50%',\n    borderRadius: radii.sm,\n    overflow: 'hidden',\n    padding: sizes.sm,\n    height: 150,\n  },\n  skeleton: {\n    width: '100%',\n    height: 250,\n  },\n  [media.tablet]: {\n    catCardSkeletonRoot: {\n      flexBasis: '33.33%',\n      height: 250,\n    },\n  },\n  [media.desktop]: {\n    catCardSkeletonRoot: {\n      flexBasis: '25%',\n    },\n  },\n}));\n\nexport default CatCardSkeleton;\n","import CatCard from './CatCard.component';\nimport CardSkeleton from './CatCard.skeleton';\n\nexport { CardSkeleton };\n\nexport default CatCard;\n","import Flex from '@core/components/atoms/Flex';\nimport { CardSkeleton } from '@core/components/organisms/CatCard';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { ITheme } from '@core/types/theme';\n\nconst skeletonCount = Array.from({ length: 10 }, (v, k) => k + 1);\nconst CatsListLoading = () => {\n  const classes = useStyles();\n\n  return (\n    <Flex className={classes.catListLoadingRoot}>\n      {skeletonCount.map((item) => (\n        <CardSkeleton key={item} />\n      ))}\n    </Flex>\n  );\n};\n\nconst useStyles = createUseStyles(({ sizes }: ITheme) => ({\n  catListLoadingRoot: {\n    padding: sizes.md,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    width: '100%',\n  },\n}));\n\nexport default CatsListLoading;\n","import React from 'react';\nimport Loading from './List.loading';\nimport Flex from '@core/components/atoms/Flex';\nimport Alert from '@core/components/molecules/Alert';\nimport Card from '@core/components/organisms/CatCard';\nimport { ICat } from '@core/types';\nimport useTranslation from '@core/hooks/useTranslation';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { ITheme } from '../../../../../@core/types/theme';\nimport Button from '@core/components/atoms/Button';\n\ninterface IListProps {\n  isLoading: boolean;\n  isError: boolean;\n  list: ICat[];\n}\n\nconst CatsList: React.FC<IListProps> = ({ isLoading, isError, list }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  if (isLoading) return <Loading />;\n\n  if (isError)\n    return (\n      <Alert type=\"Error\" title={t('oops')} description={t('api_error_desc')} />\n    );\n  if (!list?.length)\n    return (\n      <Alert\n        type=\"EmptyList\"\n        title={t('emptyList_title')}\n        description={t('emptyList_desc')}\n      />\n    );\n\n  return (\n    <Flex className={classes.listComponentRoot}>\n      {list?.map((item) => (\n        <Card key={item.id} data={item} />\n      ))}\n    </Flex>\n  );\n};\n\nconst useStyles = createUseStyles(({ sizes }: ITheme) => ({\n  listComponentRoot: {\n    padding: sizes.sm,\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n}));\n\nexport default CatsList;\n","import List from './List.component';\nexport default List;\n","import React from 'react';\nimport { createUseStyles, cnj } from '@core/utils/makeStyle';\nimport { ITheme } from '../../../types/theme';\n\nexport interface ButtonComponentProps {\n  className?: string;\n  children: any;\n  variant?: 'primary' | 'secondary';\n  onClick?: () => void;\n  disabled?: boolean;\n}\n\nconst ButtonComponent: React.FC<ButtonComponentProps> = ({\n  className,\n  onClick,\n  children,\n  variant = 'primary',\n  disabled,\n}) => {\n  const classes = useStyles();\n\n  return (\n    <button\n      disabled={disabled}\n      onClick={onClick}\n      className={cnj(\n        classes.buttonComponentRoot,\n        disabled && classes.disabledButton,\n        variant === 'secondary' && classes.secondaryButton,\n        className\n      )}\n    >\n      {children}\n    </button>\n  );\n};\n\nconst useStyles = createUseStyles(\n  ({ radii, fontSizes, sizes, colors }: ITheme) => ({\n    buttonComponentRoot: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      border: 'none',\n      borderRadius: radii.xs,\n      padding: [[sizes.xs, sizes.sm]],\n      margin: 0,\n      textDecoration: 'none',\n      background: colors.primary,\n      color: colors.white,\n      fontFamily: 'sans-serif',\n      fontSize: fontSizes['1'],\n      cursor: 'pointer',\n      textAlign: 'center',\n    },\n    secondaryButton: {\n      background: colors.secondary,\n    },\n    disabledButton: {\n      opacity: 0.5,\n    },\n  })\n);\n\nexport default ButtonComponent;\n","import Button from './Button.component';\n\nexport default Button;\n","import React from 'react';\nimport Button from '@core/components/atoms/Button';\nimport useTranslation from '@core/hooks/useTranslation';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { ITheme } from '@core/types/theme';\n\ninterface LoadMoreProps {\n  onClick: () => void;\n  disabled: boolean;\n}\n\nconst LoadMore: React.FC<LoadMoreProps> = ({ disabled, onClick }) => {\n  const { t } = useTranslation();\n  const classes = useStyles();\n\n  return (\n    <Button\n      className={classes.loadMoreRoot}\n      disabled={disabled}\n      onClick={onClick}\n    >\n      {t('loadMore')}\n    </Button>\n  );\n};\n\nconst useStyles = createUseStyles(({ sizes }: ITheme) => ({\n  loadMoreRoot: {\n    margin: [[sizes.md, 'auto']],\n    width: 250,\n  },\n}));\n\nexport default LoadMore;\n","import LoadMore from './LoadMore.component';\nexport default LoadMore;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState } from '../types';\n\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useEffect } from 'react';\nimport Flex from '@core/components/atoms/Flex';\nimport List from './partials/components/List';\nimport LoadMore from './partials/components/LoadMore';\nimport { createUseStyles } from '@core/utils/makeStyle';\nimport { useParams } from 'react-router-dom';\nimport { useState } from 'react';\nimport { useAppDispatch } from '@core/hooks/useAppDispatch';\nimport { fetchCatsAsync, setReset } from '@core/redux/reducers/cats/catsSlice';\nimport { useAppSelector } from '../../@core/hooks/useAppSelector';\n\nconst CatsList = () => {\n  const classes = useStyles();\n  const dispatch = useAppDispatch();\n  const { data, isLoading, isError } = useAppSelector((state) => state.cats);\n  const [page, setPage] = useState(0);\n  const { category = '1' } = useParams();\n\n  useEffect(() => {\n    dispatch(setReset());\n    dispatch(fetchCatsAsync({ category: category, page: 0 }));\n  }, [category]);\n\n  useEffect(() => {\n    if (page > 1) dispatch(fetchCatsAsync({ category: category, page }));\n  }, [page]);\n\n  const onClickLoadMore = () => setPage((prev) => prev + 1);\n\n  return (\n    <Flex className={classes.catsListRoot}>\n      <List list={data} isLoading={isLoading} isError={isError} />\n      {!isLoading && (\n        <LoadMore disabled={isLoading} onClick={onClickLoadMore} />\n      )}\n    </Flex>\n  );\n};\nconst useStyles = createUseStyles({\n  catsListRoot: {\n    width: '100%',\n  },\n});\nexport default CatsList;\n","import CatsList from './CatsList.component';\n\nexport default CatsList;\n","import { useDispatch } from 'react-redux';\nimport { AppDispatch } from '../types';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\n"],"names":["t","key","variables","translate","Image","React","ref","src","className","rest","classes","useStyles","useState","isError","setError","cnj","imageComponentRoot","onError","loading","alt","createUseStyles","verticalAlign","maxWidth","media","sizes","radii","cardComponentRoot","display","flexGrow","flexBasis","flexShrink","borderRadius","sm","overflow","padding","xs","height","cardImage","minWidth","objectFit","tablet","desktop","data","Flex","url","colors","opacity","skeletonComponentRoot","minHeight","backgroundColor","background","position","animationName","animationDuration","animationDirection","animationIterationCount","animationTimingFunction","darkBackground","bottom","content","left","right","top","catCardSkeletonRoot","skeleton","width","Skeleton","variant","skeletonCount","Array","from","length","v","k","catListLoadingRoot","md","flexDirection","flexWrap","map","item","listComponentRoot","isLoading","list","useTranslation","Alert","type","title","description","id","fontSizes","buttonComponentRoot","alignItems","justifyContent","border","margin","textDecoration","primary","color","white","fontFamily","fontSize","cursor","textAlign","secondaryButton","secondary","disabledButton","onClick","children","disabled","loadMoreRoot","Button","useAppSelector","useSelector","catsListRoot","dispatch","useDispatch","state","cats","page","setPage","useParams","category","useEffect","setReset","fetchCatsAsync","List","prev"],"sourceRoot":""}